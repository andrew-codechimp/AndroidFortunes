apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion '20'

    defaultConfig {
        applicationId "org.codechimp.androidfortunes"
        minSdkVersion 18
        targetSdkVersion 20
        versionCode 6
        versionName "1.5"
    }

    signingConfigs { release }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

project.archivesBaseName = "AndroidFortunes";

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:20.0.+"
    compile 'com.squareup.retrofit:retrofit:1.5.1@jar'
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'com.squareup.okhttp:okhttp:1.3.+'
    compile 'com.jakewharton:butterknife:5.1.0'
}


def Properties props = new Properties()
props.load(new FileInputStream(file('signing.properties')))

if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
        props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
    android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
    android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
    android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
    android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
} else {
    android.buildTypes.release.signingConfig = null
}
